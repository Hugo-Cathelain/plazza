///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Order.hpp"
#include <string>
#include <vector>

///////////////////////////////////////////////////////////////////////////////
// Namespace Plazza
///////////////////////////////////////////////////////////////////////////////
namespace Plazza
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class Parser
{
private:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param str
    ///
    ///////////////////////////////////////////////////////////////////////////
    static inline void ltrim(std::string& str);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param str
    ///
    ///////////////////////////////////////////////////////////////////////////
    static inline void rtrim(std::string& str);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param str
    ///
    ///////////////////////////////////////////////////////////////////////////
    static inline void trim(std::string& str);

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param order
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    static std::vector<Order> parseOrder(const std::string& order);
};

} // namespace Plazza
