///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Reception/Reception.hpp"
#include "Reception/CLI.hpp"
#include <string>
#include <memory>

///////////////////////////////////////////////////////////////////////////////
// Namespace Plazza
///////////////////////////////////////////////////////////////////////////////
namespace Plazza
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class Core
{
private:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    double m_cookingTimeMultiplier;             //<!
    int m_cooksPerKitchen;                      //<!
    long long m_restockTimeMs;                  //<!
    bool m_initialized;                         //<!
    std::unique_ptr<Reception> m_reception;     //<!
    std::unique_ptr<CLI> m_cli;                 //<!

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param argc
    /// \param argv
    ///
    ///////////////////////////////////////////////////////////////////////////
    Core(int argc, char* argv[]);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual ~Core() = default;

private:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param arg0
    ///
    ///////////////////////////////////////////////////////////////////////////
    void PrintUsage(const std::string& arg0);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param argc
    /// \param argv
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    void ParseArguments(int argc, char* argv[]);

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool IsInitialized(void) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    void OpenPizzeria(void);
};

} // !namespace Plazza
