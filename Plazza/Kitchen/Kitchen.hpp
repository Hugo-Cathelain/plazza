///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include <vector>
#include "Cook.hpp"
#include "Stock.hpp"
#include "ThreadPool.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace Plazza
///////////////////////////////////////////////////////////////////////////////
namespace
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class Kitchen
{
public:
    ///////////////////////////////////////////////////////////////////////////
    ///
    ///////////////////////////////////////////////////////////////////////////
    std::vector<Plazza::Cook> cooks;        //<!
    Plazza::Stock stock;                    //<!
    float multiplier;                       //<!
    Plazza::ThreadPool thread_pool;         //<!

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param cook_nb
    ///
    ///////////////////////////////////////////////////////////////////////////
    Kitchen(int cook_nb = 1, float multiplier = 1.0f,
        std::chrono::milliseconds restock_time);
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    ~Kitchen();
};

} // !namespace Plazza