///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Pizza/PizzaFactory.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace Plazza
///////////////////////////////////////////////////////////////////////////////
namespace Plazza
{

///////////////////////////////////////////////////////////////////////////////
template <typename T>
void PizzaFactory::RegisterPizza(const std::string& type)
{
    m_factories[type] = [](IPizza::Size size) -> std::unique_ptr<IPizza> {
        return (std::make_unique<T>(size));
    };
}

} // !namespace Plazza
