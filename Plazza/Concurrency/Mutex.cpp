///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Concurrency/Mutex.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace Plazza
///////////////////////////////////////////////////////////////////////////////
namespace Plazza
{

///////////////////////////////////////////////////////////////////////////////
Mutex::Mutex(void)
    : m_mutex()
{}

///////////////////////////////////////////////////////////////////////////////
Mutex::operator std::mutex&(void)
{
    return (m_mutex);
}

///////////////////////////////////////////////////////////////////////////////
void Mutex::Lock(void)
{
    m_mutex.lock();
}

///////////////////////////////////////////////////////////////////////////////
void Mutex::Unlock(void)
{
    m_mutex.unlock();
}

///////////////////////////////////////////////////////////////////////////////
bool Mutex::TryLock(void)
{
    return (m_mutex.try_lock());
}

///////////////////////////////////////////////////////////////////////////////
std::mutex& Mutex::GetNativeMutex(void)
{
    return (m_mutex);
}

} // !namespace Plazza
