///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Kitchen/Kitchen.hpp"
#include "Utils/Timer.hpp"
#include "Pizza/IPizza.hpp"
#include "Reception/Parser.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace Plazza
///////////////////////////////////////////////////////////////////////////////
namespace Plazza
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class Reception
{
private:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    std::vector<std::unique_ptr<Kitchen>> m_kitchens;   //<!
    std::chrono::milliseconds m_restockTime;            //<!
    size_t m_cookCount;                                 //<!

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param restockTime
    /// \param cookCount
    ///
    ///////////////////////////////////////////////////////////////////////////
    Reception(std::chrono::milliseconds restockTime, size_t cookCount);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    ~Reception();

private:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    void CreateKitchen(void);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    void RemoveKitchen(size_t id);

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    void DisplayStatus(void);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param orders
    ///
    ///////////////////////////////////////////////////////////////////////////
    void ProcessOrders(const Parser::Orders& orders);
};

} // !namespace Plazza
